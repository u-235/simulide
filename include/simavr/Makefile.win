#
# 	Copyright 2008-2012 Michel Pollet <buserror@gmail.com>
#
#	This file is part of simavr.
#
#	simavr is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	simavr is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with simavr.  If not, see <http://www.gnu.org/licenses/>.

SHELL 			:= ${shell which bash}

AVR_ROOT    := ../WinAVR

AVR_INC     := ${AVR_ROOT}/avr
AVR         := ${AVR_ROOT}/bin/avr-

# simavr directory
SIMAVR		:= ./

IPATH       += ${PREFIX}/include

CFLAGS 		+= -D__MINGW32__ 
CFLAGS		+= -g -O2 -Wall
CFLAGS      += -I${PREFIX}/include
CFLAGS 		+= -DNO_COLOR
CFLAGS 		+= -pthread

CPPFLAGS	+= --std=gnu99 -Wall
CPPFLAGS	+= ${patsubst %,-I%,${subst :, ,${IPATH}}}

AVR_CPPFLAGS= ${CPPFLAGS} -idirafter ${AVR_INC}/include

CORE_CFLAGS	= -nostdinc -DAVR_CORE=1

LIBDIR		:= ${shell pwd}/${SIMAVR}/${OBJ}

LDFLAGS		+= -L/lib -L/local/lib
LDFLAGS 	+= -L${LIBDIR} -lsimavr -lm
LDFLAGS 	+= -lelf -lpthread
LDFLAGS 	+= -lws2_32

CC 			:= $(CROSS)gcc
AR 			:= $(CROSS)ar
RANLIB 		:= $(CROSS)ranlib
MKDIR		?= mkdir -p
INSTALL		?= install
SHELL	 	:= ${shell which bash}

OBJ 		:= obj-${shell $(CC) -dumpmachine}

# include the dependency files generated by gcc, if any
-include ${wildcard ${OBJ}/*.d}

cores	:= ${wildcard cores/*.c}
sim		:= ${wildcard sim/sim_*.c} ${wildcard sim/avr_*.c}
sim_o 	:= ${patsubst sim/%.c, ${OBJ}/%.o, ${sim}}

VPATH	= cores
VPATH	+= sim

IPATH	+= sim
IPATH	+= .
IPATH	+= ../../shared

all:
	$(MAKE) obj config
	$(MAKE) libsimavr ${target}

${OBJ}/sim_%.o : cores/sim_%.c
	@$(CC) $(CPPFLAGS) $(CFLAGS) $(CFLAGS) $(CORE_CFLAGS) -MMD \
		${AVR_CPPFLAGS} \
		$<  -c -o $@
	@echo CORE $<

${OBJ}/%.o: %.c
	@$(CC) $(CPPFLAGS) $(CFLAGS) -MMD \
		$<  -c -o $@
	@echo CC $<

obj: ${OBJ}

${OBJ}:
	@mkdir -p ${OBJ}

clean-${OBJ}:
	rm -rf ${OBJ}

#
# Static library
#
${OBJ}/libsimavr.a	:	${sim_o}
	@echo AR $@
	@$(AR) cru $@ $^ && $(RANLIB) $@


${OBJ}/libsimavr.so		: ${OBJ}/libsimavr.so.1
	ln -sf libsimavr.so.1 $@

libsimavr	: config ${OBJ}/libsimavr.a


clean: clean-${OBJ}
	rm -rf ${target} *.a *.so *.exe
	rm -f sim_core_*.h


config: ${OBJ}/cores.deps sim_core_config.h sim_core_decl.h

#
# this tries to preprocess all the cores and decide
# which ones have a chance of compiling at all. Some platform
# ship with old version of avr-gcc and associated and needs
# to be verified
#

DEBUGLOG=/dev/null

sim_core_config.h ${OBJ}/cores.deps: $(cores) Makefile
	@echo CONF $@
	@conf=""; decl=""; array=""; \
	mkdir -p ${OBJ} ; echo >${OBJ}/cores.deps ; echo >$(DEBUGLOG) ;\
	for core in cores/*.c ; do \
		file=$$core; global=$${core/cores\/sim_}; global=$${global/.c}; \
		upper=$$(echo $$global|tr '[a-z]' '[A-Z]'); \
		if $(CC) -E $(CFLAGS) ${AVR_CPPFLAGS} $$file \
			>>$(DEBUGLOG) 2>&1 ; then \
			conf+="#define CONFIG_$$upper 1\n"; \
			obj=$${file/.c/.o} ; obj=$${obj/cores\/}; \
			printf "\$${OBJ}/libsimavr.a: \$${OBJ}/$$obj\n">>${OBJ}/cores.deps ; \
			printf "\$${OBJ}/libsimavr.so.1: \$${OBJ}/$$obj\n">>${OBJ}/cores.deps ; \
		else \
			echo WARNING $$file did not compile, check your avr-gcc toolchain; \
		fi \
	done ; \
	( printf "// Autogenerated do not edit\n"; \
	  printf "#ifndef __SIM_CORE_CONFIG_H__\n#define __SIM_CORE_CONFIG_H__\n\n"; \
	  printf "#define CONFIG_SIMAVR_VERSION \"${SIMAVR_VERSION}\"\n"; \
	  printf "$$conf\n"; \
	  printf "#endif\n"; \
	) >sim_core_config.h

#
# This take the config file that was generated, and create the static
# table of all available cores for name lookups, as well as a C
# config file
#
sim_core_decl.h: sim_core_config.h $(cores) Makefile
	@echo CONF $@
	@decl=""; array=""; \
	for core in $$(grep -r avr_kind_t cores/|awk -F '[ :]' '{print $$1 "=" $$3;}') ; do \
		file=$${core/=*}; global=$${core/*=}; \
		upper=$$global; upper=$${upper/.c}; \
		upper=$$(echo $$upper|tr '[a-z]' '[A-Z]'); \
		decl+="#if CONFIG_$$upper\nextern avr_kind_t $$global;\n#endif\n"; \
		array+="#if CONFIG_$$upper\n\t&$$global,\n#endif\n"; \
	done ; \
	( printf "// Autogenerated do not edit\n"; \
	  printf "#ifndef __SIM_CORE_DECL_H__\n#define __SIM_CORE_DECL_H__\n\n"; \
	  printf "#include \"sim_core_config.h\"\n";\
	  printf "$$decl\n" ;  \
	  printf "extern avr_kind_t * avr_kind[];\n"; \
	  printf "#ifdef AVR_KIND_DECL\navr_kind_t * avr_kind[] = {\n$$array\tNULL\n};\n#endif\n"; \
	  printf "#endif\n"; \
	) >sim_core_decl.h

-include ${OBJ}/cores.deps
